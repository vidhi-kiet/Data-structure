#include <iostream>

using namespace std;

class Node {
public:
    int data;
    Node* next;

    Node(int x) {
        this->data = x;
        this->next = NULL;
    }
};

void insertattail(Node* &tail, int d) {
    Node* temp2 = new Node(d);
    tail->next = temp2;
    tail = temp2; // Update tail to point to the new node
}

void printlist(Node* head) {
    Node* temp = head;
    while (temp != NULL) {
        cout << temp->data << " ";
        temp = temp->next;
    }
    cout << endl;
}

int main() {
    cout << "Traversal :" << endl;

    // Initialize head and tail with the first node
    Node* head = new Node(10);
    Node* tail = head; // Initialize tail to point to the same node as head

    printlist(head); // Print the initial list with one node

    // Insert a new node at the tail and update tail pointer
    insertattail(tail, 20);
    printlist(head); // Print the list after the first insertion

    // Insert another node at the tail and update tail pointer
    insertattail(tail, 30);
    printlist(head); // Print the list after the second insertion

    // ... More insertions and printlist calls can be added here

    return 0;
}
